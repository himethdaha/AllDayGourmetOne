{"mappings":"AAGA,MAAMA,EAAeC,SAASC,iBAAiB,SACzCC,EAAWF,SAASG,cAAc,eAClCC,EAAUJ,SAASG,cAAc,cACvC,IAAIE,EAAe,EACnB,MAAMC,EAAYP,EAAaQ,OACzBC,EAAkBR,SAASG,cAAc,YACzCM,EAAgBT,SAASC,iBAAiB,eAC1CS,EAAOV,SAASG,cAAc,SAEpCJ,EAAaY,SAAO,CAAEC,EAASC,KAE7BD,EAAQE,MAAMC,UAAS,cAAiB,IAAMF,SAIhDX,EAASc,iBAAiB,SAAS,WAG7BX,IAAiBC,EAAY,EAE/BD,EAAe,EAGfA,IAEFN,EAAaY,SAAO,CAAEC,EAASC,KAI7BD,EAAQE,MAAMC,UAAS,cAAiB,KAAOF,EAAQR,OACvDY,EAAeZ,SAKnBD,EAAQY,iBAAiB,SAAS,WAEX,IAAjBX,EAEFA,EAAeC,EAAY,EAG3BD,IAGFN,EAAaY,SAAO,CAAEC,EAASC,KAI7BD,EAAQE,MAAMC,UAAS,cAAiB,KAAOF,EAAQR,OACvDY,EAAeZ,SAKnBL,SAASgB,iBAAiB,WAAW,SAAUE,GAC7CA,EAAEC,iBACY,eAAVD,EAAEE,MAGAf,IAAiBC,EAAY,EAE/BD,EAAe,EAGfA,IAEFN,EAAaY,SAAO,CAAEC,EAASC,KAI7BD,EAAQE,MAAMC,UAAS,cAAiB,KAAOF,EAAQR,OACvDY,EAAeZ,OAIL,cAAVa,EAAEE,MAEiB,IAAjBf,EAEFA,EAAeC,EAAY,EAG3BD,IAGFN,EAAaY,SAAO,CAAEC,EAASC,KAI7BD,EAAQE,MAAMC,UAAS,cAAiB,KAAOF,EAAQR,OACvDY,EAAeZ,UAOrBG,EAAgBQ,iBAAiB,SAAS,SAAUE,GAElD,GAAIA,EAAEG,OAAOC,UAAUC,SAAS,cAAe,CAC7C,MAAMC,EAAQN,EAAEG,OAAOI,QAAQD,MAC/BzB,EAAaY,SAAO,CAAEC,EAASC,KAI7BD,EAAQE,MAAMC,UAAS,cAAiB,KAAOF,EAAQW,OACvDP,EAAeZ,UAMrB,MAAMY,EAAiB,SAAUO,GAE/Bf,EAAcE,SAASe,GAAWA,EAAOJ,UAAUK,OAAO,YAE1D3B,SACGG,cAAa,2BAA4BqB,OACzCF,UAAUM,IAAI,WAKbC,GADW,IAAIC,MACKC,cAC1BrB,EAAKsB,YAAcH","sources":["src/js/script.js"],"sourcesContent":["\"use strict\";\r\n\r\n//Get all the individual testimonials\r\nconst testimonials = document.querySelectorAll(\".test\");\r\nconst btnRight = document.querySelector(\".btn--right\");\r\nconst btnLeft = document.querySelector(\".btn--left\");\r\nlet currentSlide = 0;\r\nconst maxSlides = testimonials.length;\r\nconst buttonContainer = document.querySelector(\".buttons\");\r\nconst circleButtons = document.querySelectorAll(\".circle-btn\");\r\nconst year = document.querySelector(\".year\");\r\n\r\ntestimonials.forEach((element, index) => {\r\n  //Move them off the screen\r\n  element.style.transform = `translateX(${170 * index}%)`;\r\n});\r\n\r\n//Button right functionality\r\nbtnRight.addEventListener(\"click\", function () {\r\n  //Check if the currentSlide is at the last slide\r\n  //maxSlides.length = 3, currSlide is '0' based. That's why i gotta subtract 1\r\n  if (currentSlide === maxSlides - 1) {\r\n    //If at the last slide, when the click event happens change the currentSlide to 0\r\n    currentSlide = 0;\r\n  } else {\r\n    //When clicking the button add one to the currentSlide variable\r\n    currentSlide++;\r\n  }\r\n  testimonials.forEach((element, index) => {\r\n    //Move them off the screen\r\n    //Subtract the currentSlide from the index to move the slide at '0' to '-1' and slide at '1' to '0'\r\n    //This way we can get the next slide as the current and the current slide as the previous\r\n    element.style.transform = `translateX(${170 * (index - currentSlide)}%)`;\r\n    activateButton(currentSlide);\r\n  });\r\n});\r\n\r\n//Button left functionality\r\nbtnLeft.addEventListener(\"click\", function () {\r\n  //Check if the currentSlide is at '0'\r\n  if (currentSlide === 0) {\r\n    //If at '0' assign currentSlide to the last slide\r\n    currentSlide = maxSlides - 1;\r\n  } else {\r\n    //When clicking the button subtract one to the currentSlide variable\r\n    currentSlide--;\r\n  }\r\n\r\n  testimonials.forEach((element, index) => {\r\n    //Move them off the screen\r\n    //Subtract the currentSlide from the index to move the slide at '0' to '-1' and slide at '1' to '0'\r\n    //This way we can get the next slide as the current and the current slide as the previous\r\n    element.style.transform = `translateX(${170 * (index - currentSlide)}%)`;\r\n    activateButton(currentSlide);\r\n  });\r\n});\r\n\r\n//Adding event listeners when the arrow keys are pressed\r\ndocument.addEventListener(\"keydown\", function (e) {\r\n  e.preventDefault();\r\n  if (e.key === \"ArrowRight\") {\r\n    //Check if the currentSlide is at the last slide\r\n    //maxSlides.length = 3, currSlide is '0' based. That's why i gotta subtract 1\r\n    if (currentSlide === maxSlides - 1) {\r\n      //If at the last slide, when the click event happens change the currentSlide to 0\r\n      currentSlide = 0;\r\n    } else {\r\n      //When clicking the button add one to the currentSlide variable\r\n      currentSlide++;\r\n    }\r\n    testimonials.forEach((element, index) => {\r\n      //Move them off the screen\r\n      //Subtract the currentSlide from the index to move the slide at '0' to '-1' and slide at '1' to '0'\r\n      //This way we can get the next slide as the current and the current slide as the previous\r\n      element.style.transform = `translateX(${170 * (index - currentSlide)}%)`;\r\n      activateButton(currentSlide);\r\n    });\r\n  }\r\n\r\n  if (e.key === \"ArrowLeft\") {\r\n    //Check if the currentSlide is at '0'\r\n    if (currentSlide === 0) {\r\n      //If at '0' assign currentSlide to the last slide\r\n      currentSlide = maxSlides - 1;\r\n    } else {\r\n      //When clicking the button subtract one to the currentSlide variable\r\n      currentSlide--;\r\n    }\r\n\r\n    testimonials.forEach((element, index) => {\r\n      //Move them off the screen\r\n      //Subtract the currentSlide from the index to move the slide at '0' to '-1' and slide at '1' to '0'\r\n      //This way we can get the next slide as the current and the current slide as the previous\r\n      element.style.transform = `translateX(${170 * (index - currentSlide)}%)`;\r\n      activateButton(currentSlide);\r\n    });\r\n  }\r\n});\r\n\r\n//Event listener for the circular buttons\r\n//Add the listner to the parent element\r\nbuttonContainer.addEventListener(\"click\", function (e) {\r\n  //Check if the event target contains the class for the cirlce buttons\r\n  if (e.target.classList.contains(\"circle-btn\")) {\r\n    const slide = e.target.dataset.slide;\r\n    testimonials.forEach((element, index) => {\r\n      //Move them off the screen\r\n      //Subtract the currentSlide from the index to move the slide at '0' to '-1' and slide at '1' to '0'\r\n      //This way we can get the next slide as the current and the current slide as the previous\r\n      element.style.transform = `translateX(${170 * (index - slide)}%)`;\r\n      activateButton(currentSlide);\r\n    });\r\n  }\r\n});\r\n\r\n//Show the active slide in the cirlce dots\r\nconst activateButton = function (slide) {\r\n  //Loop through all the circle buttons\r\n  circleButtons.forEach((circle) => circle.classList.remove(\"active\"));\r\n  //Select the button based on the dataselector\r\n  document\r\n    .querySelector(`.circle-btn[data-slide=\"${slide}\"]`)\r\n    .classList.add(\"active\");\r\n};\r\n\r\n//Getting the current year for the copyright text\r\nconst currDate = new Date();\r\nconst currYear = currDate.getFullYear();\r\nyear.textContent = currYear;\r\n"],"names":["$a91cd049e9b5247f$var$testimonials","document","querySelectorAll","$a91cd049e9b5247f$var$btnRight","querySelector","$a91cd049e9b5247f$var$btnLeft","$a91cd049e9b5247f$var$currentSlide","$a91cd049e9b5247f$var$maxSlides","length","$a91cd049e9b5247f$var$buttonContainer","$a91cd049e9b5247f$var$circleButtons","$a91cd049e9b5247f$var$year","forEach","element","index","style","transform","addEventListener","$a91cd049e9b5247f$var$activateButton","e","preventDefault","key","target","classList","contains","slide","dataset","circle","remove","add","$a91cd049e9b5247f$var$currYear","Date","getFullYear","textContent"],"version":3,"file":"Index.86301dfe.js.map"}